name: Deploy Helm Chart

on:
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  # terraform-planner-service user in master account owns these keys
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  changed-files:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      changed-files: ${{ steps.changed.outputs.changed-files }}
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: tj-actions/changed-files@v40
        id: changed-files
        with:
          dir_names_max_depth: 2
          files: charts/**

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

  matrix:
    needs: changed-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        changed_files: ${{ fromJson(needs.changed-files.outputs.changed-files) }}
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::927377145031:role/Terraform-ReadOnly
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-skip-session-tagging: true # don't tag session - LZA doesn't deploy the trust relationship configs for this

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.13.5/yq_linux_amd64 -O /usr/bin/yq &&\
          chmod +x /usr/bin/yq

      - name: Update Helm Chart Version
        run: |
          for file in ${{ matrix.changed_files }}; do
            echo $file
            # if [[ $file == "Chart.yaml" ]]; then
            #   yq e '.version = "0.0.4"' -i $file
            # fi
          done

      - name: Set up Helm
        uses: azure/setup-helm@v3.5

      - name: Install helm s3 plugin
        run: helm plugin install https://github.com/hypnoglow/helm-s3.git

      - name: run update version script
        id: updated-version-script
        run: sh ./scripts/update-version.sh

      - name: fetch environment and service from pull request title
        id: fetch-silo-env-svc-names
        run: sh ./scripts/update-version.sh

      - name: update helm chart verison
        working-directory: ${{ matrix.changed_files }}
        run: yq e ".version = \"${{ steps.updated-version-script.outputs.new_version }}\"" -i Chart.yaml

      - name: Update Helm dependencies
        working-directory: ${{ matrix.changed_files }}
        run: helm dependency update ./

      - name: Package Helm chart
        working-directory: ${{ matrix.changed_files }}
        run: helm package ./

      - name: Push Helm chart to S3
        working-directory: ${{ matrix.changed_files }}
        run: helm s3 push ${{ matrix.changed_files }}.${{ steps.updated-version-script.outputs.new_version }}.tgz sigfig-helm-charts

      - name: update targetRevision for helm chart
        working-directory: ./environments/${{ steps.fetch-silo-env-svc-names.outputs.silo }}/${{ steps.fetch-silo-env-svc-names.outputs.environment }}
        run: yq e 'select(.kind == "Application" and .metadata.name == "${{ steps.fetch-silo-env-svc-names.outputs.silo }}-${{ steps.fetch-silo-env-svc-names.outputs.environment }}-${{ steps.fetch-silo-env-svc-names.outputs.service }}").spec.sources[0].targetRevision = ${{ steps.updated-version-script.outputs.new_version }} -i application.yaml
