name: Deploy Helm Chart

on:
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  # terraform-planner-service user in master account owns these keys.
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  changed-files-job:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      matrix: ${{ steps.changed-files.outputs.all_changed_files }}
      silo: ${{ steps.fetch-silo-env-svc-names.outputs.silo }}
      environment: ${{ steps.fetch-silo-env-svc-names.outputs.environment }}
      service: ${{ steps.fetch-silo-env-svc-names.outputs.service }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: tj-actions/changed-files@v40
        id: changed-files
        with:
          escape_json: false
          dir_names: true
          dir_names_max_depth: 2
          files: charts/**
          json: true
          quotepath: false

      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'

      - name: update file permission
        run: chmod +x ./.github/scripts/*

      - name: fetch environment and service from pull request title
        id: fetch-silo-env-svc-names
        run: ./.github/scripts/fetch-pr-title.sh "${{ github.event.pull_request.title }}"

  matrix-job:
    needs: changed-files-job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        files: ${{ fromJson(needs.changed-files-job.outputs.matrix) }}
    permissions: write-all
    env:
      silo: ${{ needs.changed-files-job.outputs.silo }}
      environment: ${{ needs.changed-files-job.outputs.environment }}
      service: ${{ needs.changed-files-job.outputs.service }}
    environment: ${{ needs.changed-files-job.outputs.environment }}
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-skip-session-tagging: true # don't tag session - LZA doesn't deploy the trust relationship configs for this

      - name: Set up Helm
        uses: azure/setup-helm@v3.5

      - name: Install helm s3 plugin
        run: helm plugin install https://github.com/hypnoglow/helm-s3.git

      - name: run update version script
        id: updated-version-script
        run: ./.github/scripts/update-version.sh  ${{ matrix.files }}

      - name: update helm chart verison
        working-directory: ${{ matrix.files }}
        run: yq e ".version = \"${{ env.new_version }}\"" -i Chart.yaml

      - name: Update Helm dependencies
        working-directory: ${{ matrix.files }}
        run: helm dependency update ./

      - name: Package Helm chart
        working-directory: ${{ matrix.files }}
        run: helm package ./

      - name: Push Helm chart to S3
        working-directory: ${{ matrix.files }}
        run: helm s3 push ${{ matrix.files }}.${{ env.new_version }}.tgz service-helm-charts

      - name: update targetRevision for helm chart
        working-directory: ./environments/${{ env.silo }}/${{ env.environment }}
        run: yq e 'select(.kind == "Application" and .metadata.name == "${{ env.silo }}-${{ env.environment }}-${{ env.service }}").spec.sources[0].targetRevision = ${{ env.new_version }} -i application.yaml
